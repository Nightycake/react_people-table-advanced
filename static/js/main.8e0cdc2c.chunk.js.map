{"version":3,"sources":["components/variables/Centuries.ts","types/QueryTypes.ts","utils/searchHelper.ts","components/SearchLink.tsx","components/PeopleFilters.tsx","components/Loader/Loader.tsx","components/PeopleLink.tsx","types/SortTypes.ts","components/PeopleTable.tsx","api.ts","components/PeoplePage.tsx","components/Navbar.tsx","components/HomePage.tsx","App.tsx","index.tsx"],"names":["Century","QueryTypes","getSearchWith","currentParams","paramsToUpdate","newParams","URLSearchParams","toString","Object","entries","forEach","key","value","delete","Array","isArray","part","append","set","SearchLink","children","params","props","useSearchParams","searchParams","to","search","PeopleFilters","setSearchParams","query","get","Query","sex","Sex","centuries","getAll","Centuries","className","classNames","type","placeholder","onChange","event","target","map","century","includes","current","filter","length","Loader","PeopleLink","person","slug","name","cn","SortTypes","PeopleTable","people","useParams","sort","Sort","order","Order","getPersonByName","find","pers","useEffect","selectedPerson","document","querySelector","scrollIntoView","block","behavior","window","scrollTo","top","values","param","charAt","toUpperCase","substring","motherName","fatherName","born","died","mother","undefined","father","API_URL","wait","delay","Promise","resolve","setTimeout","then","fetch","response","json","PeoplePage","useState","setPeople","isLoading","setIsLoading","hasError","setHasError","getPeople","catch","finally","filteredPeople","useMemo","preparedPeople","mom","dad","toLowerCase","trim","Math","ceil","person1","person2","Name","localeCompare","Born","Died","Error","reverse","linkClass","isActive","Navbar","role","HomePage","App","index","element","path","replace","createRoot","getElementById","render"],"mappings":"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","file":"static/js/main.8e0cdc2c.chunk.js","sourcesContent":["export const Century = ['16', '17', '18', '19', '20'];\n","export enum QueryTypes {\n  Query = 'query',\n  Sex = 'sex',\n  Centuries = 'centuries',\n  Sort = 'sort',\n  Order = 'order',\n}\n","export type SearchParams = {\n  [key: string]: string | string[] | null,\n};\n\n/**\n * This function prepares a correct search string\n * from a given currentParams and paramsToUpdate.\n */\nexport function getSearchWith(\n  currentParams: URLSearchParams,\n  paramsToUpdate: SearchParams, // it's our custom type\n): string {\n  // copy currentParams by creating new object from a string\n  const newParams = new URLSearchParams(\n    currentParams.toString(),\n  );\n\n  // Here is the example of paramsToUpdate\n  // {\n  //   sex: 'm',                ['sex', 'm']\n  //   order: null,             ['order', null]\n  //   centuries: ['16', '19'], ['centuries', ['16', '19']]\n  // }\n  //\n  // - params with the `null` value are deleted;\n  // - string value is set to given param key;\n  // - array of strings adds several params with the same key;\n\n  Object.entries(paramsToUpdate)\n    .forEach(([key, value]) => {\n      if (value === null) {\n        newParams.delete(key);\n      } else if (Array.isArray(value)) {\n        // we delete the key to remove old values\n        newParams.delete(key);\n\n        value.forEach(part => {\n          newParams.append(key, part);\n        });\n      } else {\n        newParams.set(key, value);\n      }\n    });\n\n  // we return a string to use it inside links\n  return newParams.toString();\n}\n","import { Link, LinkProps, useSearchParams } from 'react-router-dom';\nimport { getSearchWith, SearchParams } from '../utils/searchHelper';\n\n/**\n * To replace the the standard `Link` we take all it props except for `to`\n * along with the custom `params` prop that we use for updating the search\n */\ntype Props = Omit<LinkProps, 'to'> & {\n  params: SearchParams,\n};\n\n/**\n * SearchLink updates the given `params` in the search keeping the `pathname`\n * and the other existing search params (see `getSearchWith`)\n */\nexport const SearchLink: React.FC<Props> = ({\n  children, // this is the content between the open and closing tags\n  params, // the params to be updated in the `search`\n  ...props // all usual Link props like `className`, `style` and `id`\n}) => {\n  const [searchParams] = useSearchParams();\n\n  return (\n    <Link\n      // to={{ search: getSearchWith(searchParams, { query: 'sdf' }) }}\n      // to={{ search: getSearchWith(searchParams, { query: null }) }}\n      // to={{ search: getSearchWith(searchParams, { centuries: ['16', '18'] }) }}\n      to={{\n        search: getSearchWith(searchParams, params),\n      }}\n      {...props} // copy all the other props\n    >\n      {children}\n    </Link>\n  );\n};\n","import classNames from 'classnames';\nimport { useSearchParams } from 'react-router-dom';\nimport { Century } from './variables/Centuries';\nimport { QueryTypes } from '../types/QueryTypes';\nimport { getSearchWith } from '../utils/searchHelper';\nimport { SearchLink } from './SearchLink';\n\nexport const PeopleFilters = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get(QueryTypes.Query) || '';\n  const sex = searchParams.get(QueryTypes.Sex) || '';\n  const centuries = searchParams.getAll(QueryTypes.Centuries) || [];\n\n  const handleQueryChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const search = getSearchWith(searchParams, {\n      query: event.target.value || null,\n    });\n\n    setSearchParams(search);\n  };\n\n  const handleCenturyChange = (current: string) => {\n    return centuries.includes(current)\n      ? centuries.filter(century => century !== current)\n      : [...centuries, current];\n  };\n\n  const renderCenturyButton = (century: string) => (\n    <SearchLink\n      key={century}\n      data-cy=\"century\"\n      className={classNames('button mr-1', {\n        'is-info': centuries.includes(century),\n      })}\n      params={{ centuries: handleCenturyChange(century) }}\n    >\n      {century}\n    </SearchLink>\n  );\n\n  return (\n    <nav className=\"panel\">\n      <p className=\"panel-heading\">Filters</p>\n\n      <p\n        className=\"panel-tabs\"\n        data-cy=\"SexFilter\"\n      >\n        <SearchLink\n          params={{ sex: null }}\n          className={classNames({ 'is-active': !sex })}\n        >\n          All\n        </SearchLink>\n\n        <SearchLink\n          params={{ sex: 'm' }}\n          className={classNames({ 'is-active': sex === 'm' })}\n        >\n          Male\n        </SearchLink>\n\n        <SearchLink\n          params={{ sex: 'f' }}\n          className={classNames({ 'is-active': sex === 'f' })}\n        >\n          Female\n        </SearchLink>\n      </p>\n\n      <div className=\"panel-block\">\n        <p className=\"control has-icons-left\">\n          <input\n            data-cy=\"NameFilter\"\n            type=\"search\"\n            className=\"input\"\n            placeholder=\"Search\"\n            value={query}\n            onChange={handleQueryChange}\n          />\n\n          <span className=\"icon is-left\">\n            <i\n              className=\"fas fa-search\"\n              aria-hidden=\"true\"\n            />\n          </span>\n        </p>\n      </div>\n\n      <div className=\"panel-block\">\n        <div\n          className=\"level is-flex-grow-1 is-mobile\"\n          data-cy=\"CenturyFilter\"\n        >\n          <div className=\"level-left\">\n            {Century.map(renderCenturyButton)}\n          </div>\n\n          <div className=\"level-right ml-4\">\n            <SearchLink\n              data-cy=\"centuryALL\"\n              className={classNames('button is-success', {\n                'is-outlined': !!centuries.length,\n              })}\n              params={{ centuries: null }}\n            >\n              All\n            </SearchLink>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"panel-block\">\n        <SearchLink\n          className={classNames('button is-link is-fullwidth', {\n            'is-outlined': !!centuries.length || sex || query,\n          })}\n          params={{ sex: null, centuries: null, query: null }}\n        >\n          Reset all filters\n        </SearchLink>\n      </div>\n    </nav>\n  );\n};\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import cn from 'classnames';\nimport { Link } from 'react-router-dom';\nimport { Person } from '../types';\n\ntype Props = {\n  person: Person;\n};\n\nexport const PeopleLink: React.FC<Props> = ({ person }) => {\n  const { slug, sex, name } = person;\n\n  return (\n    <Link\n      to={`../${slug}`}\n      className={cn({\n        'has-text-danger': sex === 'f',\n      })}\n    >\n      {name}\n    </Link>\n  );\n};\n","export enum SortTypes {\n  Name = 'name',\n  Sex = 'sex',\n  Born = 'born',\n  Died = 'died',\n}\n","import React, { useEffect } from 'react';\nimport { useParams, useSearchParams } from 'react-router-dom';\nimport cn from 'classnames';\nimport { Person } from '../types';\nimport { PeopleLink } from './PeopleLink';\nimport { QueryTypes } from '../types/QueryTypes';\nimport { SortTypes } from '../types/SortTypes';\nimport { SearchParams } from '../utils/searchHelper';\nimport { SearchLink } from './SearchLink';\n\ntype Props = {\n  people: Person[];\n};\n\nexport const PeopleTable: React.FC<Props> = ({ people }) => {\n  const { slug } = useParams();\n  const [searchParams] = useSearchParams();\n  const sort = searchParams.get(QueryTypes.Sort) || '';\n  const order = searchParams.get(QueryTypes.Order) || '';\n\n  const handleSortingChange = (type: SortTypes): SearchParams => {\n    if (!sort || sort !== type) {\n      return { sort: type, order: null };\n    }\n\n    if (!order) {\n      return { sort: type, order: 'desc' };\n    }\n\n    return { sort: null, order: null };\n  };\n\n  function getPersonByName(name: string) {\n    return people.find(pers => pers.name === name);\n  }\n\n  useEffect(() => {\n    const selectedPerson = document.querySelector('.has-background-warning');\n\n    if (selectedPerson) {\n      selectedPerson.scrollIntoView({\n        block: 'center',\n        behavior: 'smooth',\n      });\n    } else {\n      window.scrollTo({ top: 0, behavior: 'smooth' });\n    }\n  }, [slug]);\n\n  const sortTable = () => {\n    return (\n      <tr>\n        {Object.values(SortTypes).map(param => (\n          <th key={param}>\n            <span className=\"is-flex is-flex-wrap-nowrap\">\n              {param.charAt(0).toUpperCase() + param.substring(1)}\n              <SearchLink params={handleSortingChange(param)}>\n                <span className=\"icon\">\n                  <i\n                    className={cn('fas', {\n                      'fa-sort': sort !== param,\n                      'fa-sort-up': sort === param && !order,\n                      'fa-sort-down': sort === param && order,\n                    })}\n                  />\n                </span>\n              </SearchLink>\n            </span>\n          </th>\n        ))}\n        <th>Mother</th>\n        <th>Father</th>\n      </tr>\n    );\n  };\n\n  return (\n    <>\n      <table\n        data-cy=\"peopleTable\"\n        className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n      >\n        <thead>\n          {sortTable()}\n        </thead>\n\n        <tbody>\n          {people.map(person => {\n            const {\n              motherName, fatherName, sex, born, died,\n            } = person;\n            const mother = motherName ? getPersonByName(motherName) : undefined;\n            const father = fatherName ? getPersonByName(fatherName) : undefined;\n\n            return (\n              <tr\n                key={person.slug}\n                data-cy=\"person\"\n                className={cn({\n                  'has-background-warning': person.slug === slug,\n                })}\n              >\n                <td>\n                  <PeopleLink person={person} />\n                </td>\n                <td>{sex}</td>\n                <td>{born}</td>\n                <td>{died}</td>\n                <td>\n                  {(motherName\n                              && (mother ? <PeopleLink person={mother} />\n                                : motherName))\n                              || '-'}\n                </td>\n                <td>\n                  {(fatherName\n                              && (father ? <PeopleLink person={father} />\n                                : fatherName))\n                              || '-'}\n                </td>\n              </tr>\n            );\n          })}\n        </tbody>\n      </table>\n    </>\n  );\n};\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport async function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import { useEffect, useMemo, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { PeopleFilters } from './PeopleFilters';\nimport { Loader } from './Loader';\nimport { PeopleTable } from './PeopleTable';\nimport { getPeople } from '../api';\nimport { Person } from '../types';\nimport { SortTypes } from '../types/SortTypes';\nimport { QueryTypes } from '../types/QueryTypes';\n\nexport const PeoplePage: React.FC = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [hasError, setHasError] = useState(false);\n\n  const [searchParams] = useSearchParams();\n  const query = searchParams.get(QueryTypes.Query) || '';\n  const sex = searchParams.get(QueryTypes.Sex) || '';\n  const centuries = searchParams.getAll(QueryTypes.Centuries) || [];\n  const sort = searchParams.get(QueryTypes.Sort) || '';\n  const order = searchParams.get(QueryTypes.Order) || '';\n\n  useEffect(() => {\n    getPeople()\n      .then(setPeople)\n      .catch(() => setHasError(true))\n      .finally(() => setIsLoading(false));\n  }, []);\n\n  const filteredPeople = useMemo(() => {\n    let preparedPeople = people.map(person => {\n      const mother = people.find(mom => mom.name === person.motherName);\n      const father = people.find(dad => dad.name === person.fatherName);\n\n      return {\n        ...person,\n        mother,\n        father,\n      };\n    });\n\n    if (query) {\n      preparedPeople = preparedPeople.filter(person => {\n        return (\n          person.name.toLowerCase().includes(query.toLowerCase().trim())\n          || person.fatherName\n            ?.toLowerCase()\n            .includes(query.toLowerCase().trim())\n          || person.motherName?.toLowerCase()\n            .includes(query.toLowerCase().trim())\n        );\n      });\n    }\n\n    if (sex) {\n      preparedPeople = preparedPeople.filter(person => {\n        return person.sex === sex;\n      });\n    }\n\n    if (centuries.length) {\n      preparedPeople = preparedPeople.filter(person => {\n        return centuries.find(century => {\n          return Math.ceil(person.born / 100) === +century;\n        });\n      });\n    }\n\n    if (sort) {\n      preparedPeople = [...preparedPeople].sort((person1, person2) => {\n        switch (sort) {\n          case SortTypes.Name:\n          case SortTypes.Sex:\n            return person1[sort].localeCompare(person2[sort]);\n          case SortTypes.Born:\n          case SortTypes.Died:\n            return +person1[sort] - +person2[sort];\n\n          default:\n            throw new Error('Sorting went wrong...');\n        }\n      });\n    }\n\n    if (order) {\n      preparedPeople = preparedPeople.reverse();\n    }\n\n    return preparedPeople;\n  }, [people, query, sex, centuries, sort, order]);\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n\n      <div className=\"block\">\n        <div className=\"columns is-desktop is-flex-direction-row-reverse\">\n          <div className=\"column is-7-tablet is-narrow-desktop\">\n            {people.length > 0 && <PeopleFilters />}\n          </div>\n\n          <div className=\"column\">\n            <div className=\"box table-container\">\n              {isLoading ? (\n                <Loader />\n              ) : (\n                <>\n                  {hasError ? (\n                    <p\n                      data-cy=\"peopleLoadingError\"\n                      className=\"has-text-danger\"\n                    >\n                      Something went wrong\n                    </p>\n                  ) : (\n                    <>\n                      {people.length > 0 ? (\n                        <PeopleTable people={filteredPeople} />\n                      ) : (\n                        <p data-cy=\"noPeopleMessage\">\n                          There are no people on the server\n                        </p>\n                      )}\n                      {!filteredPeople.length && (\n                        <p>\n                          There are no people matching the current search\n                          criteria\n                        </p>\n                      )}\n                    </>\n                  )}\n                </>\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n","import { NavLink } from 'react-router-dom';\nimport cn from 'classnames';\n\nconst linkClass = ({ isActive }: { isActive: boolean }) => cn(\n  'navbar-item', { 'has-background-grey-lighter': isActive },\n);\n\nexport const Navbar = () => {\n  return (\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <NavLink\n            className={linkClass}\n            to=\"/\"\n          >\n            Home\n          </NavLink>\n          <NavLink\n            aria-current=\"page\"\n            className={linkClass}\n            to=\"/people\"\n          >\n            People\n          </NavLink>\n        </div>\n      </div>\n    </nav>\n  );\n};\n","export const HomePage = () => {\n  return (<h1 className=\"title\">Home Page</h1>);\n};\n","import { Navigate, Route, Routes } from 'react-router-dom';\nimport { PeoplePage } from './components/PeoplePage';\nimport { Navbar } from './components/Navbar';\nimport './App.scss';\nimport { HomePage } from './components/HomePage';\n\nexport const App = () => {\n  return (\n    <div data-cy=\"app\">\n      <Navbar />\n\n      <div className=\"section\">\n        <div className=\"container\">\n          <Routes>\n            <Route\n              index\n              element={<HomePage />}\n            />\n            <Route path=\"people\">\n              <Route\n                path=\":slug?\"\n                element={<PeoplePage />}\n              />\n            </Route>\n\n            <Route\n              path=\"home\"\n              element={(\n                <Navigate\n                  to=\"/\"\n                  replace\n                />\n              )}\n            />\n            <Route\n              path=\"*\"\n              element={<h1 className=\"title\">Page not found</h1>}\n            />\n          </Routes>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}